@PointClass base(TalkNPC) 
	appliesto(SINCE_P2CE)
	studioprop() 
= npc_personality_core: "Aperture Science Personality Construct. Animated balls with handles."
	[
	modelskin(choices) : "Model Skin" : 0 : "If using the 'alt' skin, this sets the eye color -- If not using the alt skin, (0 = broken) (1=normal)" =
		[
		0: "Skin 0"
		1: "Skin 1"
		2: "Skin 2"
		3: "Skin 3"
		]

	altmodel(choices) : "Model Variant" : 0 : "Model variant to use" =
		[
		0: "Proto"
		1: "Normal"
		]

	model[engine](studio) : "Model" : "models/npcs/personality_sphere/personality_sphere.mdl" 
	model(choices) : "[H] Model" : "models/npcs/personality_sphere/personality_sphere.mdl" : "Choose the model to show in hammer. Set to the same as Use Alternate Skins." =
		[
		"models/npcs/personality_sphere/personality_sphere.mdl": "Proto"
		"models/npcs/personality_sphere/personality_sphere_skins.mdl": "Normal"
		]

	skin[engine](integer) : "Skin" : 0
	skin(choices) : "[H] Skin" : 0 : "If using the 'alt' skin, this sets the eye color (in hammer) -- If not using the alt skin, (0 = broken) (1=normal)" =
		[
		0: "Skin 0"
		1: "Skin 1"
		2: "Skin 2"
		3: "Skin 3"
		]
	flashlightcolor(choices) : "Flashlight Color" : "255 255 255 500" : "Color of the flashlight" = 
		[
			"255 255 255 500": "White"
			"240 150 150 500": "Red"
			"150 150 220 500": "Blue"
		]
	flashlightfov(float) : "Flashlight FOV" : 90 : "Field of view of the flashlight"
	flashlightfarz(float) : "Flashlight FarZ" : 750 : "FarZ (Distance) of the flashlight"
	flashlightbrightness(float) : "Flashlight Brightness" : 1 : "Brightness of the flashlight"

	// Inputs
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input EnableFlashlight(void) : "Enable the eye flashlight."
	input DisableFlashlight(void) : "Disable the eye flashlight."
	input ForcePickup(void) : "Force the player to pickup the sphere immediately."
	input EnablePickup(void) : "Allow player pickup."
	input DisablePickup(void) : "Disable player pickup."
	input PlayAttach(void) : "Play the attachment animation, used for syncing with the socket's animation."
	input PlayDetach(void) : "Play the detachment animation, used for syncing with the socket's animation."
	input PlayLock(void) : "Play the locking animation, used for syncing with the socket's animation."
	input SetIdleSequence(string) : "Set a sequence to use as an idle sequence."
	input ClearIdleSequence(void) : "Return to the default idle animation."
	input Explode(void) : "Explode the sphere, triggering an explosion effect and some gibs."
	input SetFlashlightFOV(float) : "Changes the field of view of the flashlight."
	input SetFlashlightBrightness(float) : "Changes the brightness of the flashlight."

	// Outputs
	output OnPlayerPickup(void) : "Fired whenever the player picks up the core."
	output OnPlayerDrop(void) : "Fired whenever the player drops the core."
	output OnPlayerDrop(void) : "Fired whenever the player drops the core."
	]
