@PointClass base(BaseNPC, ResponseContext)
	studioprop() line(0 0 255, targetname, TripwireAimTarget) 
	appliesto(SINCE_P2CE)
	sphere(_sphere_radius)
= npc_rocket_turret: "Portal 1 rocket sentry, aims a rocket at a target. " +
		"In Portal 2, the rocket spawns with a speed of 0 and sometimes gets " +
		"stuck inside the model, so this will need to be worked around."
	[
	spawnflags(flags) : "spawnflags" =
		[
		1: "Start Retracted" : 0
		]

	rocketspeed(float) : "Rocket Speed" : 450 : "Speed the rocket will travel at."
	rocketlifetime(float) : "Rocket Lifetime" : 20 : "The rocket will automatically detonate after this number of seconds."
	TripwireMode(boolean) : "Tripwire Mode" : 0 : "Makes the turret aim in a specific direction instead of following the target. When the beam is crossed, a rocket instantly fires."
	TripwireAimTarget(target_destination) : "Tripwire Aim Target" : : "In tripwire mode, the entity to aim at."
	model(studio) : "Model" : "models/props_bts/rocket_sentry.mdl" : "Model to use in-game"

	_sphere_radius[!engine](integer) readonly : "<Maximum Range>" : 8192 : "How far the turret will be able to see targets. Always 8192, but this keyvalue is needed to display the preview."

	// Inputs
	input Toggle(void) : "Toggles between activated and deactivated states."
	input Enable(void) : "Activate Rocket Turret, and allow it to begin scanning."
	input Disable(void) : "Deactivate and retract the Rocket Turret."
	input SetTarget(target_destination) : "Sets the target for this turret to attack."
	input Destroy(void) : "Sets this turret to it's destroyed state."
	input ForceFire(void) : "Makes the turret immediately fire a rocket where it is pointing."

	// Outputs
	output OnFoundTarget(void) : "Fired when the rocket turret finds an unobstructed target."
	output OnLostTarget(void) : "Fired when turret's target is blocked."
	output OnDeath(void) : "Fired after this turret finishes it's destroy think and begins it's death think."
	]
