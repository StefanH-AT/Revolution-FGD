@PointClass base(BaseEntityAnimating, SRCIndicator) 
	appliesto(SINCE_P2CE)
	studioprop() 
= prop_laser_catcher: "Discouragement Beam Catcher that detects a laser, absorbing the beam. The entity will fire outputs when struck and unstruck."
	[
	skintype[engine](boolean) : "Skin Type" : 0
	skintype(choices) : "Skin Type" : 0 : "Set the type of catcher to use." =
		[
		0: "Clean"
		1: "Rusted"
		]

	skin[engine](integer) : "Skin" : 0
	skin(choices) : "[H] Skin Type" : 0 : "The skin to show in Hammer." =
		[
		0: "Clean  - Off"
		1: "Clean  - On"
		2: "Rusted - Off"
		3: "Rusted - On"
		]

	model[engine](studio): "Laser Catcher model" : "models/props/laser_catcher.mdl"
	model(choices) : "Laser Catcher Model" : "models/props/laser_catcher_center.mdl" : "Is the catcher offset? (You can also add a custom model here.)" =
		[
		"models/props/laser_catcher_center.mdl": "Centered"
		"models/props/laser_catcher.mdl": "Offset"
		]

	src_fix_skins[srctools, +USE_SAVE_RESTORE](boolean) : "Fix Skins Logic" : 1 : "If set, add extra outputs to fix the bug with skins not changing after a reload from save."
	
	uselaserfilter(bool) : "Use Laser Filter" : 0 : "If enabled, this catcher can only be activated by the specified laser color."
	
	filtercolor(choices) : "Laser Filter Color" : "255 255 255 255" : "Filter lasers by this color. You can also specify a custom RGBA color here." =
		[
		"255 255 255 255" : "White"
		"255 0 0 255" : "Default Red"
		"100 255 100 255" : "Lethal Green"
		"32 112 202 255" : "Blue"
		"255 212 91 255" : "Yellow"
		"212 60 146 255" : "Pink"
		"65 97 0 255" : "Dark Green"
		]

	// Inputs
	input Skin(integer) : "Set the skin of the catcher manually."

	input SetFilterColor(color255) : "Changes the laser filter colour."

	// Outputs
	output OnPowered(void) : "Fired when a laser hits the target."
	output OnUnpowered(void) : "Fired when a laser has stopped hitting the target."
	]
