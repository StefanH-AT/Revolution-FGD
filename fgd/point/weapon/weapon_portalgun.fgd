@PointClass base(Weapon) 
	appliesto(SINCE_P2CE)
	studioprop("models/weapons/w_portalgun.mdl") 
= weapon_portalgun: "Aperture Science Handheld Portal Device"
	[

	spawnflags(flags) =
		[
		8 : "Disable pickup sounds" : 0	
		]

	canfireportal1(boolean) : "Can Fire Blue Portals" : 1 : "Can this portalgun create blue portals?"
	canfireportal2(boolean) : "Can Fire Orange Portals" : 1 : "Can this portalgun create orange portals?"
	
	showingpotatos(boolean) : "Show PoTaToS" : 0 : "Show PoTaToS on the portal gun."

	startingteamnum[engine](integer) : "Player" : 0 : "Which player this gun belongs to.  Will decide which portals it fires before being picked up, as well as the skin."
	startingteamnum(choices) : "Player" : 0 : "Which player this gun belongs to.  Will decide which portals it fires before being picked up, as well as the skin." =
		[
		0: "Chell/Bendy"
		2: "P-Body"
		3: "ATLAS"
		]


	skin[engine](integer) : "Stripes" : 0 : "Which stripes to show in Hammer."
	skin(choices) : "[H] Stripes" : 0 : "Which stripes to show in Hammer." =
		[
		0: "None"
		1: "Blue"
		2: "Orange"
		]

	// Inputs
	input ChargePortal1(void) : "Does charge up effect for mounted portalgun. Missing particles and sounds."
	input ChargePortal2(void) : "Does charge up effect for mounted portalgun. Missing particles and sounds."
	input FirePortal1(void) : "Projects the	'blue' portal onto a wall in the facing direction of the gun."
	input FirePortal2(void) : "Projects the 'orange' portal onto a wall in the facing direction of the gun."
	input FirePortalDirection1(vector) : "Fires the 'blue' portal in the specified direction."
	input FirePortalDirection2(vector) : "Fires the 'orange' portal in the specified direction."

	// Outputs
	output OnFiredPortal1(void) : "Fires when the 'blue' portal is fired."
	output OnFiredPortal2(void) : "Fires when the 'orange' portal is fired."
	]
